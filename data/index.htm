<!DOCTYPE html>
<html>
<head>
<meta http-equiv='Content-type' content='text/html; charset=utf-8'>
<meta name='viewport' content='width=device-width, initial-scale=1.0'>
<title>Главная</title>
<style type="text/css">

body{
max-width:640px;
margin:auto;
padding: 10px 6px;
font-size:16px;
font-family:arial;
}


.bar1, .bar2, .bar3 {
  width: 28px;
  height: 4px;
  background-color: white;
  margin: 4px 0;
  transition: 0.4s;
}
.change .bar1 {
  -webkit-transform: rotate(-45deg) translate(-7px,6px);
  transform: rotate(-45deg) translate(-7px,6px);
}
.change .bar2 {opacity: 0;}
.change .bar3 {
  -webkit-transform: rotate(45deg) translate(-6px,-5px);
  transform: rotate(45deg) translate(-6px,-5px);
}


.topnav {
  overflow:hidden;
  background-color:black;
  position:relative;
  box-shadow: 0 1px 8px 0 rgba(0,0,0,0.2);
}
.topnav #myLinks {
  display:none;
}
.topnav a, .topnav #headnav {
  color: white;
  padding: 11px 16px;
  text-decoration: none;
  font-size: 16px;
  display: block;
}
.topnav #headnav {
	font-size: 18px;
}
.topnav a.icon{
  padding: 8px 8px;
  background: black;
  display: block;
  position: absolute;
  right: 0;
  top: 0;
}
.active {
  background-color:#0f6389;
  color: white;
}


.card {
  margin-top: 6px;
  box-shadow: 0 1px 8px 0 rgba(0,0,0,0.2);
  transition: 0.3s;
  width: 100%;
}
.container {
  padding: 2px 16px 16px 16px;
}


table td {text-align: center;}
table .tdleft {text-align: left;}
table .tdright {text-align: right;}
table, select, input[type=range] {width: 100%;}
select, input[type=number] { font-size: 16px;}

.buttonContr button {
	width: 75px;
	padding: 16px 0;
	font-size: 16px;
	color: white;
	background-color: #555555;
	border: 2px solid #555555;
	border-radius: 4px;
	transition-duration: 0.4s;
}
.buttonContr .buttonContrPressed{
	background-color: #0f6389;
	border: 2px solid #0f6389;	
}

.buttonContr .center {width: 140px;}

.brightness #range {margin-bottom: 0;}
.brightness {margin:auto;}


</style>
<script>
	function myFunction(x) {
	  x.classList.toggle("change");

	   var x = document.getElementById("myLinks");
	  if (x.style.display === "block") {
	    x.style.display = "none";
	  } else {
	    x.style.display = "block";
	  }
	}
</script>
</head>
<body>


<!-- Верхнее меню навигации -->
<div class="topnav">
	<!--<a href="index.htm" class="active">Главная</a> -->
	<div id="headnav" class="active">Главная</div>
	<div id="myLinks">
		<a href="index.htm">Главная</a>
		<a href="setup.htm">Настройки WiFi</a>
		<a href="edit.htm">Файлы</a>
		<a href="update.htm">Обновление прошивки</a>
	</div>
	<a class="icon">
		<div class="containerMenu" onclick="myFunction(this)">
			<div class="bar1"></div>
			<div class="bar2"></div>
			<div class="bar3"></div>
		</div>
	</a>
</div>


<div class="card">
  <div class="container buttonContr">
  	<center><h4>Управление светильником</h4></center>
	<table>
		<tr> 
			<td class="tdleft">
				<button id="onOff1" class="left" onclick="pressOnOff1()">Левый</button>
			</td>
			<td>
				<button id="onOffAll" class="center" onclick="pressOnOffAll()">Светильник</button>
			</td>
			<td class="tdright">
				<button id="onOff2" class="right" onclick="pressOnOff2()">Правый</button>
			</td>
		</tr>
	</table>
  </div>
</div>

<div class="card">
  <div class="container brightness">
  	<center><h4>Управление яркостью</h4>
	<table>
		<tr> 
			<td class="tdleft">
				<input type="number" id="minBridhtness" max="100" min="1" onblur="changeMinBridhtnessValue(this.value)">
			</td>
			<td>
				<input type="number" id="ledBridhtness" max="100" min="1" step="1" readonly >
			</td>
			<td class="tdright">
				<input type="number" id="maxBridhtness" max="100" min="1" onblur="changeMaxBridhtnessValue(this.value)">
			</td>
		</tr>
	</table>
	<p id="range">
		<input type="range" id="rangeLedBridhtness" min="0" max="100" list="rangeList" oninput="changeRangeValue(this.value)">
	</p>
	<datalist id="rangeList">
		<option value="0" label="0">
		<option value="10" label="10">
		<option value="20" label="20">
		<option value="30" label="30">
		<option value="40" label="40">
		<option value="50" label="50">
		<option value="60" label="60">
		<option value="70" label="70">
		<option value="80" label="80">
		<option value="90" label="90">
		<option value="100" label="100">
	</datalist>
	<center>
  </div>
</div>

<div class="card">
  <div class="container">
  	<center><h4>Предустановленные цвета</h4>
  	<table><tr> 
		<td class="tdleft">
			<input type="color" id="arrConstLedTemp0" list="colorList">
		</td>
		<td>
			<input type="color" id="arrConstLedTemp1" list="colorList">
		</td>
		<td class="tdright">
			<input type="color" id="arrConstLedTemp2" list="colorList">
		</td>
	</tr></table>
  </center>
	<datalist id="colorList">
		<option value="#ffffff" label="Белый">
		<option value="#ff0000" label="Красный">
		<option value="#008000" label="Зелёный">
		<option value="#0000ff" label="Синий">
		<option value="#ffa500" label="Оранжевый">
		<option value="#FFD700" label="Золотой">
		<option value="#ffff00" label="Желтый">
		<option value="#ffffe0" label="Светло-желтый">
	</datalist>
  </div>
</div>

<div class="card">
  <div class="container">
  	<center><h4>Эффект анимации</h4></center>
  	<h5>Включения:</h5>
	  <select class="anime" name="nAnimeOn" id="nAnimeOn">
	    <option value="0">Анимация 1</option>
	    <option value="1">Анимация 2</option>
	    <option value="2">Анимация 3</option>
	    <option value="3">Анимация 4</option>
	    <option value="4">Анимация 5</option>
	    <option value="5">Анимация 6</option>
	    <option value="6">Анимация 7</option>
	  </select>
	 <br><br>
	<h5>Отключения:</h5>
	  <select class="anime" name="nAnimeOff" id="nAnimeOff">
	    <option value="0">Анимация 1</option>
	    <option value="1">Анимация 2</option>
	    <option value="2">Анимация 3</option>
	    <option value="3">Анимация 4</option>
	    <option value="4">Анимация 5</option>
	    <option value="5">Анимация 6</option>
	    <option value="6">Анимация 7</option>
	  </select>
  </div>
</div>
	

<script>
let dataSend = {      //структура с передаваемыми и принимаемыми переменными ws серверу
	page: "index",
	flagLedState: false,
	ledBridhtness: 0,
	minBridhtness: 0,
	maxBridhtness: 0,
	varForArrConstLedTemp: 0,
	nAnimeOn: 0,
	nAnimeOff: 0,
	arrConstLedTemp0: new Array(),
	arrConstLedTemp1: new Array(),
	arrConstLedTemp2: new Array()
};

let data = {};	//структура с только принимаемыми переменными с ws серверу
let outState = 0;

function change(n) {
	if (dataSend["unity"] + n > 200)   dataSend["unity"] = 200;
	else if (dataSend["unity"] + n < 0)   dataSend["unity"] = 0;
	else   dataSend["unity"] += n;

	updateAllPage();
	if (dataSend["outState"] == 1)	 startSendData("JSON");
};


function outOFF(){
	dataSend["outState"] = 0;
	startSendData("JSON");
};


function outON(){
	dataSend["outState"] = 1;
	startSendData("JSON");
};


function pressOnOffAll(val){
	dataSend["flagLedState"] = !dataSend["flagLedState"];
	if (dataSend["flagLedState"] == 1){
		document.getElementById("onOffAll").classList.add("buttonContrPressed");
		document.getElementById("onOff1").classList.add("buttonContrPressed");
		document.getElementById("onOff2").classList.add("buttonContrPressed");
	}
	else{
		document.getElementById("onOffAll").classList.remove("buttonContrPressed");
		document.getElementById("onOff1").classList.remove("buttonContrPressed");
		document.getElementById("onOff2").classList.remove("buttonContrPressed");
	}
	console.log(dataSend["flagLedState"]); 
}

function pressOnOff1(val){
	document.getElementById("onOff1").classList.toggle("buttonContrPressed");
}

function pressOnOff2(val){
	document.getElementById("onOff2").classList.toggle("buttonContrPressed");
}

function changeMinBridhtnessValue(val){
	if (val>100)      val = 100;
	else if (val<1)   val = 1;
	document.getElementById("minBridhtness").value = val;
};

function changeMaxBridhtnessValue(val){
	if (val>100)      val = 100;
	else if (val<1)   val = 1;
	document.getElementById("maxBridhtness").value = val;
};

function changeRangeValue(val){
	document.getElementById("ledBridhtness").value = val;
};


//Обновление данных на странице
function updateAllPage() {
	document.getElementById("ledBridhtness").value = (100*dataSend["ledBridhtness"]).toFixed();
	document.getElementById("minBridhtness").value = (100*dataSend["minBridhtness"]).toFixed();
	document.getElementById("maxBridhtness").value = (100*dataSend["maxBridhtness"]).toFixed();
	document.getElementById("rangeLedBridhtness").value = (100*dataSend["ledBridhtness"]).toFixed();
	document.getElementById("arrConstLedTemp0").value = rgbToHex(dataSend["arrConstLedTemp0"][0],dataSend["arrConstLedTemp0"][1], dataSend["arrConstLedTemp0"][2]);
	document.getElementById("arrConstLedTemp1").value = rgbToHex(dataSend["arrConstLedTemp1"][0],dataSend["arrConstLedTemp1"][1], dataSend["arrConstLedTemp1"][2]);
	document.getElementById("arrConstLedTemp2").value = rgbToHex(dataSend["arrConstLedTemp2"][0],dataSend["arrConstLedTemp2"][1], dataSend["arrConstLedTemp2"][2]);
	document.getElementById("nAnimeOn").value = dataSend["nAnimeOn"];
	document.getElementById("nAnimeOff").value = dataSend["nAnimeOff"];

	if (dataSend["flagLedState"] == 1){
		document.getElementById("onOffAll").classList.add("buttonContrPressed");
		document.getElementById("onOff1").classList.add("buttonContrPressed");
		document.getElementById("onOff2").classList.add("buttonContrPressed");
	}
	else{
		document.getElementById("onOffAll").classList.remove("buttonContrPressed");
		document.getElementById("onOff1").classList.remove("buttonContrPressed");
		document.getElementById("onOff2").classList.remove("buttonContrPressed");
	}
};


//Конвертация кода цвета Hex to RGB
function componentToHex(c) {
  var hex = c.toString(16);
  return hex.length == 1 ? "0" + hex : hex;
}

//Конвертация кода цвета RGB to Hex
function rgbToHex(r, g, b) {
  return "#" + componentToHex(r) + componentToHex(g) + componentToHex(b);
}


</script>
<script src="connect.js" type="text/javascript"></script>
</body>
</html>